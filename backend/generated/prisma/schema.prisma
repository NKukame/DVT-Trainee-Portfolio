// Improved schema
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
  CLIENT
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String
  name       String
  role       UserRole  @default(USER)
  employeeId String?   @unique
  employee   Employee? @relation(fields: [employeeId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Employee {
  id         String          @id @default(uuid())
  position   String
  department String
  github     String?
  linkedin   String?
  phone      String?
  available  Boolean         @default(true)
  techStack  String[]
  company    String
  birthday   DateTime?
  photoUrl   String?
  location   String?
  user       User?
  projects   ProjectMember[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model Project {
  id          String          @id @default(uuid())
  name        String
  description String
  techStack   String[]
  github      String?
  videoUrl    String?
  imageUrl    String?
  members     ProjectMember[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model ProjectMember {
  id         String   @id @default(uuid())
  projectId  String
  project    Project  @relation(fields: [projectId], references: [id])
  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
  role       String?
  joinedAt   DateTime @default(now())

  @@unique([projectId, employeeId])
}
