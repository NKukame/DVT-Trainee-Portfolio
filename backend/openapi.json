{
  "openapi": "3.1.0",
  "info": {
    "title": "DVT Trainee Portfolio API",
    "version": "1.0.0",
    "description": "DVT Trainee Portfolio API"
  },
  "tags": [
    {
      "name": "user",
      "description": "User operations"
    },
    {
      "name": "employee",
      "description": "Employee operations"
    },
    {
      "name": "project",
      "description": "Project operations"
    },
    {
      "name": "projectMember",
      "description": "ProjectMember operations"
    },
    {
      "name": "testimonial",
      "description": "Testimonial operations"
    },
    {
      "name": "availability",
      "description": "Availability operations"
    },
    {
      "name": "techStack",
      "description": "TechStack operations"
    },
    {
      "name": "softSkill",
      "description": "SoftSkill operations"
    },
    {
      "name": "employeeTechStack",
      "description": "EmployeeTechStack operations"
    },
    {
      "name": "employeeSoftSkill",
      "description": "EmployeeSoftSkill operations"
    },
    {
      "name": "industry",
      "description": "Industry operations"
    },
    {
      "name": "projectIndustry",
      "description": "ProjectIndustry operations"
    },
    {
      "name": "projectTechStack",
      "description": "ProjectTechStack operations"
    },
    {
      "name": "education",
      "description": "Education operations"
    },
    {
      "name": "certificate",
      "description": "Certificate operations"
    },
    {
      "name": "career",
      "description": "Career operations"
    }
  ],
  "components": {
    "schemas": {
      "_AnyObject": {
        "type": "object",
        "additionalProperties": true
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "USER",
          "ADMIN",
          "CLIENT"
        ]
      },
      "UserTitle": {
        "type": "string",
        "enum": [
          "MR",
          "MRS",
          "MS",
          "DR"
        ]
      },
      "EmployeeRole": {
        "type": "string",
        "enum": [
          "DEVELOPER",
          "DESIGNER",
          "PROJECT_MANAGER",
          "TEAM_LEAD",
          "SENIOR_DEVELOPER",
          "FULLSTACK_DEVELOPER",
          "FRONTEND_DEVELOPER",
          "BACKEND_DEVELOPER",
          "UX_UI_DESIGNER",
          "JUNIOR_DEVELOPER",
          "TESTER",
          "PRODUCT_OWNER",
          "SCRUM_MASTER",
          "DELIVERY_MANAGER"
        ]
      },
      "Department": {
        "type": "string",
        "enum": [
          "ENGINEERING",
          "DESIGN",
          "MARKETING",
          "SALES",
          "HR"
        ]
      },
      "TechCategory": {
        "type": "string",
        "enum": [
          "BACKEND",
          "FRONTEND",
          "DESIGN",
          "MOBILE"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employee": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Employee"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "email",
          "password",
          "role",
          "createdAt",
          "updatedAt"
        ]
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "$ref": "#/components/schemas/UserTitle"
          },
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "birthday": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "photoUrl": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "bio": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/EmployeeRole"
          },
          "education": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Education"
            }
          },
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Certificate"
            }
          },
          "career": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Career"
            }
          },
          "department": {
            "$ref": "#/components/schemas/Department"
          },
          "company": {
            "type": "string"
          },
          "location": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "github": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "linkedIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "experience": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "portfolio": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "availability": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Availability"
              }
            ]
          },
          "techStack": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeTechStack"
            }
          },
          "softSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeSoftSkill"
            }
          },
          "testimonials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Testimonial"
            }
          },
          "user": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectMember"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "name",
          "surname",
          "bio",
          "role",
          "department",
          "company",
          "email",
          "createdAt",
          "updatedAt"
        ]
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectIndustry"
            }
          },
          "techStack": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTechStack"
            }
          },
          "github": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "demo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "screenshot": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectMember"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "createdAt",
          "updatedAt"
        ]
      },
      "ProjectMember": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeRole"
              }
            ]
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "projectId",
          "project",
          "employeeId",
          "employee",
          "joinedAt"
        ]
      },
      "Testimonial": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clients": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "company": {
            "type": "string"
          },
          "quote": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "company",
          "quote",
          "reference",
          "employeeId",
          "employee",
          "createdAt",
          "updatedAt"
        ]
      },
      "Availability": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "available": {
            "type": "boolean"
          },
          "client": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "employeeId",
          "employee",
          "available",
          "client",
          "createdAt",
          "updatedAt"
        ]
      },
      "TechStack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/TechCategory"
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeTechStack"
            }
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTechStack"
            }
          }
        },
        "required": [
          "id",
          "name",
          "category"
        ]
      },
      "SoftSkill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeSoftSkill"
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "EmployeeTechStack": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "techStackId": {
            "type": "string"
          },
          "techStack": {
            "$ref": "#/components/schemas/TechStack"
          },
          "Techrating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "employeeId",
          "employee",
          "techStackId",
          "techStack"
        ]
      },
      "EmployeeSoftSkill": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "softSkillId": {
            "type": "string"
          },
          "skillsRating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "softSkill": {
            "$ref": "#/components/schemas/SoftSkill"
          }
        },
        "required": [
          "employeeId",
          "employee",
          "softSkillId",
          "softSkill"
        ]
      },
      "Industry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectIndustry"
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ProjectIndustry": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "industryId": {
            "type": "string"
          },
          "industry": {
            "$ref": "#/components/schemas/Industry"
          }
        },
        "required": [
          "projectId",
          "project",
          "industryId",
          "industry"
        ]
      },
      "ProjectTechStack": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "techStackId": {
            "type": "string"
          },
          "techStack": {
            "$ref": "#/components/schemas/TechStack"
          }
        },
        "required": [
          "projectId",
          "project",
          "techStackId",
          "techStack"
        ]
      },
      "Education": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "institution": {
            "type": "string"
          },
          "qualification": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          }
        },
        "required": [
          "id",
          "institution",
          "qualification",
          "employeeId",
          "employee"
        ]
      },
      "Certificate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "institution": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          }
        },
        "required": [
          "id",
          "name",
          "institution",
          "employeeId",
          "employee"
        ]
      },
      "Career": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "duration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          }
        },
        "required": [
          "id",
          "role",
          "company",
          "employeeId",
          "employee"
        ]
      },
      "AggregateUser": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "UserGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "email",
          "password",
          "role",
          "createdAt",
          "updatedAt"
        ]
      },
      "AggregateEmployee": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "EmployeeGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "$ref": "#/components/schemas/UserTitle"
          },
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "birthday": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "photoUrl": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "bio": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/EmployeeRole"
          },
          "department": {
            "$ref": "#/components/schemas/Department"
          },
          "company": {
            "type": "string"
          },
          "location": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "github": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "linkedIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "experience": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "portfolio": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "title",
          "name",
          "surname",
          "bio",
          "role",
          "department",
          "company",
          "email",
          "createdAt",
          "updatedAt"
        ]
      },
      "AggregateProject": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "ProjectGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "github": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "demo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "screenshot": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "createdAt",
          "updatedAt"
        ]
      },
      "AggregateProjectMember": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMemberCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMemberMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMemberMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "ProjectMemberGroupByOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeRole"
              }
            ]
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMemberCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMemberMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectMemberMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "projectId",
          "employeeId",
          "joinedAt"
        ]
      },
      "AggregateTestimonial": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TestimonialCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TestimonialMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TestimonialMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "TestimonialGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clients": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "company": {
            "type": "string"
          },
          "quote": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TestimonialCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TestimonialMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TestimonialMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "company",
          "quote",
          "reference",
          "employeeId",
          "createdAt",
          "updatedAt"
        ]
      },
      "AggregateAvailability": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AvailabilityCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AvailabilityMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AvailabilityMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "AvailabilityGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          },
          "client": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AvailabilityCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AvailabilityMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AvailabilityMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "employeeId",
          "available",
          "client",
          "createdAt",
          "updatedAt"
        ]
      },
      "AggregateTechStack": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TechStackCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TechStackMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TechStackMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "TechStackGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/TechCategory"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TechStackCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TechStackMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TechStackMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "category"
        ]
      },
      "AggregateSoftSkill": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SoftSkillCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SoftSkillMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SoftSkillMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "SoftSkillGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SoftSkillCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SoftSkillMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SoftSkillMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "AggregateEmployeeTechStack": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeTechStackCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeTechStackMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeTechStackMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "EmployeeTechStackGroupByOutputType": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string"
          },
          "techStackId": {
            "type": "string"
          },
          "Techrating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeTechStackCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeTechStackMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeTechStackMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "employeeId",
          "techStackId"
        ]
      },
      "AggregateEmployeeSoftSkill": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeSoftSkillCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeSoftSkillMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeSoftSkillMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "EmployeeSoftSkillGroupByOutputType": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string"
          },
          "softSkillId": {
            "type": "string"
          },
          "skillsRating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeSoftSkillCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeSoftSkillMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeSoftSkillMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "employeeId",
          "softSkillId"
        ]
      },
      "AggregateIndustry": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IndustryCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IndustryMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IndustryMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "IndustryGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IndustryCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IndustryMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IndustryMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "AggregateProjectIndustry": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectIndustryCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectIndustryMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectIndustryMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "ProjectIndustryGroupByOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "industryId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectIndustryCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectIndustryMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectIndustryMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "projectId",
          "industryId"
        ]
      },
      "AggregateProjectTechStack": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectTechStackCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectTechStackMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectTechStackMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "ProjectTechStackGroupByOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "techStackId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectTechStackCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectTechStackMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectTechStackMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "projectId",
          "techStackId"
        ]
      },
      "AggregateEducation": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EducationCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EducationMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EducationMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "EducationGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "institution": {
            "type": "string"
          },
          "qualification": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EducationCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EducationMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EducationMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "institution",
          "qualification",
          "employeeId"
        ]
      },
      "AggregateCertificate": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CertificateCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CertificateMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CertificateMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "CertificateGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "institution": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CertificateCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CertificateMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CertificateMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "institution",
          "employeeId"
        ]
      },
      "AggregateCareer": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CareerCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CareerMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CareerMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "CareerGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "duration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CareerCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CareerMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CareerMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "role",
          "company",
          "employeeId"
        ]
      },
      "UserCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "integer"
          },
          "password": {
            "type": "integer"
          },
          "role": {
            "type": "integer"
          },
          "employeeId": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "email",
          "password",
          "role",
          "employeeId",
          "createdAt",
          "updatedAt",
          "_all"
        ]
      },
      "UserMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "UserMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "EmployeeCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "surname": {
            "type": "integer"
          },
          "birthday": {
            "type": "integer"
          },
          "photoUrl": {
            "type": "integer"
          },
          "bio": {
            "type": "integer"
          },
          "role": {
            "type": "integer"
          },
          "department": {
            "type": "integer"
          },
          "company": {
            "type": "integer"
          },
          "location": {
            "type": "integer"
          },
          "email": {
            "type": "integer"
          },
          "phone": {
            "type": "integer"
          },
          "github": {
            "type": "integer"
          },
          "linkedIn": {
            "type": "integer"
          },
          "experience": {
            "type": "integer"
          },
          "portfolio": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "title",
          "name",
          "surname",
          "birthday",
          "photoUrl",
          "bio",
          "role",
          "department",
          "company",
          "location",
          "email",
          "phone",
          "github",
          "linkedIn",
          "experience",
          "portfolio",
          "createdAt",
          "updatedAt",
          "_all"
        ]
      },
      "EmployeeMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserTitle"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "surname": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "birthday": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "photoUrl": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "bio": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeRole"
              }
            ]
          },
          "department": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Department"
              }
            ]
          },
          "company": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "github": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "linkedIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "experience": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "portfolio": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "EmployeeMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserTitle"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "surname": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "birthday": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "photoUrl": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "bio": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeRole"
              }
            ]
          },
          "department": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Department"
              }
            ]
          },
          "company": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "github": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "linkedIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "experience": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "portfolio": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "ProjectCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "github": {
            "type": "integer"
          },
          "demo": {
            "type": "integer"
          },
          "screenshot": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "github",
          "demo",
          "screenshot",
          "createdAt",
          "updatedAt",
          "_all"
        ]
      },
      "ProjectMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "github": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "demo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "screenshot": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "ProjectMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "github": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "demo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "screenshot": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "ProjectMemberCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer"
          },
          "employeeId": {
            "type": "integer"
          },
          "role": {
            "type": "integer"
          },
          "joinedAt": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "projectId",
          "employeeId",
          "role",
          "joinedAt",
          "_all"
        ]
      },
      "ProjectMemberMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeRole"
              }
            ]
          },
          "joinedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "ProjectMemberMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EmployeeRole"
              }
            ]
          },
          "joinedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "TestimonialCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "clients": {
            "type": "integer"
          },
          "company": {
            "type": "integer"
          },
          "quote": {
            "type": "integer"
          },
          "reference": {
            "type": "integer"
          },
          "employeeId": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "clients",
          "company",
          "quote",
          "reference",
          "employeeId",
          "createdAt",
          "updatedAt",
          "_all"
        ]
      },
      "TestimonialMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "clients": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "company": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "quote": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "reference": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "TestimonialMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "clients": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "company": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "quote": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "reference": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "AvailabilityCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "employeeId": {
            "type": "integer"
          },
          "available": {
            "type": "integer"
          },
          "client": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "employeeId",
          "available",
          "client",
          "createdAt",
          "updatedAt",
          "_all"
        ]
      },
      "AvailabilityMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "available": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "client": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "AvailabilityMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "available": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "client": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "TechStackCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "category": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "category",
          "_all"
        ]
      },
      "TechStackMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "category": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TechCategory"
              }
            ]
          }
        }
      },
      "TechStackMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "category": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TechCategory"
              }
            ]
          }
        }
      },
      "SoftSkillCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "_all"
        ]
      },
      "SoftSkillMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "SoftSkillMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "EmployeeTechStackCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer"
          },
          "techStackId": {
            "type": "integer"
          },
          "Techrating": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "employeeId",
          "techStackId",
          "Techrating",
          "_all"
        ]
      },
      "EmployeeTechStackMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "techStackId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "Techrating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "EmployeeTechStackMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "techStackId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "Techrating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "EmployeeSoftSkillCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer"
          },
          "softSkillId": {
            "type": "integer"
          },
          "skillsRating": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "employeeId",
          "softSkillId",
          "skillsRating",
          "_all"
        ]
      },
      "EmployeeSoftSkillMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "softSkillId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "skillsRating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "EmployeeSoftSkillMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "softSkillId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "skillsRating": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "IndustryCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "_all"
        ]
      },
      "IndustryMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "IndustryMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProjectIndustryCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer"
          },
          "industryId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "projectId",
          "industryId",
          "_all"
        ]
      },
      "ProjectIndustryMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "industryId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProjectIndustryMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "industryId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProjectTechStackCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer"
          },
          "techStackId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "projectId",
          "techStackId",
          "_all"
        ]
      },
      "ProjectTechStackMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "techStackId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProjectTechStackMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "projectId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "techStackId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "EducationCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "institution": {
            "type": "integer"
          },
          "qualification": {
            "type": "integer"
          },
          "employeeId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "institution",
          "qualification",
          "employeeId",
          "_all"
        ]
      },
      "EducationMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "institution": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "qualification": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "EducationMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "institution": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "qualification": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "CertificateCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "institution": {
            "type": "integer"
          },
          "employeeId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "institution",
          "employeeId",
          "_all"
        ]
      },
      "CertificateMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "institution": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "CertificateMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "institution": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "CareerCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "role": {
            "type": "integer"
          },
          "company": {
            "type": "integer"
          },
          "duration": {
            "type": "integer"
          },
          "employeeId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "role",
          "company",
          "duration",
          "employeeId",
          "_all"
        ]
      },
      "CareerMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "company": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "duration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "CareerMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "company": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "duration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "employeeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "_Meta": {
        "type": "object",
        "description": "Meta information about the request or response",
        "properties": {
          "serialization": {
            "description": "Serialization metadata"
          }
        },
        "additionalProperties": true
      },
      "_Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "prisma": {
                "type": "boolean",
                "description": "Indicates if the error occurred during a Prisma call"
              },
              "rejectedByPolicy": {
                "type": "boolean",
                "description": "Indicates if the error was due to rejection by a policy"
              },
              "code": {
                "type": "string",
                "description": "Prisma error code. Only available when \"prisma\" field is true."
              },
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "reason": {
                "type": "string",
                "description": "Detailed error reason"
              },
              "zodErrors": {
                "type": "object",
                "additionalProperties": true,
                "description": "Zod validation errors if the error is due to data validation failure"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "BatchPayload": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "UserCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectMemberGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TestimonialGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AvailabilityGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TechStackGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SoftSkillGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeTechStackGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EmployeeSoftSkillGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "IndustryGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectIndustryGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProjectTechStackGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "EducationGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CertificateGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_AnyObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_AnyObject"
                }
              }
            ]
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "data": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "create": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "update": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "include": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "cursor": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CareerGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "orderBy": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "by": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "having": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/_AnyObject"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "_max": {
            "$ref": "#/components/schemas/_AnyObject"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/api/v2/user/create": {
      "post": {
        "operationId": "createUser",
        "description": "Create a new User",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/user/createMany": {
      "post": {
        "operationId": "createManyUser",
        "description": "Create several User",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/user/findUnique": {
      "get": {
        "operationId": "findUniqueUser",
        "description": "Find one unique User",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/user/findFirst": {
      "get": {
        "operationId": "findFirstUser",
        "description": "Find the first User matching the given condition",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/user/findMany": {
      "get": {
        "operationId": "findManyUser",
        "description": "Find a list of User",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/user/update": {
      "patch": {
        "operationId": "updateUser",
        "description": "Update a User",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/user/updateMany": {
      "patch": {
        "operationId": "updateManyUser",
        "description": "Update Users matching the given condition",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/user/upsert": {
      "post": {
        "operationId": "upsertUser",
        "description": "Upsert a User",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/user/delete": {
      "delete": {
        "operationId": "deleteUser",
        "description": "Delete one unique User",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/user/deleteMany": {
      "delete": {
        "operationId": "deleteManyUser",
        "description": "Delete Users matching the given condition",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/user/count": {
      "get": {
        "operationId": "countUser",
        "description": "Find a list of User",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/UserCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/user/aggregate": {
      "get": {
        "operationId": "aggregateUser",
        "description": "Aggregate Users",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/user/groupBy": {
      "get": {
        "operationId": "groupByUser",
        "description": "Group Users by fields",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employee/create": {
      "post": {
        "operationId": "createEmployee",
        "description": "Create a new Employee",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Employee",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employee/createMany": {
      "post": {
        "operationId": "createManyEmployee",
        "description": "Create several Employee",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employee/findUnique": {
      "get": {
        "operationId": "findUniqueEmployee",
        "description": "Find one unique Employee",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Employee",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employee/findFirst": {
      "get": {
        "operationId": "findFirstEmployee",
        "description": "Find the first Employee matching the given condition",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Employee",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employee/findMany": {
      "get": {
        "operationId": "findManyEmployee",
        "description": "Find a list of Employee",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Employee"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employee/update": {
      "patch": {
        "operationId": "updateEmployee",
        "description": "Update a Employee",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Employee",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employee/updateMany": {
      "patch": {
        "operationId": "updateManyEmployee",
        "description": "Update Employees matching the given condition",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employee/upsert": {
      "post": {
        "operationId": "upsertEmployee",
        "description": "Upsert a Employee",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Employee",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employee/delete": {
      "delete": {
        "operationId": "deleteEmployee",
        "description": "Delete one unique Employee",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Employee",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employee/deleteMany": {
      "delete": {
        "operationId": "deleteManyEmployee",
        "description": "Delete Employees matching the given condition",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employee/count": {
      "get": {
        "operationId": "countEmployee",
        "description": "Find a list of Employee",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/EmployeeCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employee/aggregate": {
      "get": {
        "operationId": "aggregateEmployee",
        "description": "Aggregate Employees",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateEmployee",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employee/groupBy": {
      "get": {
        "operationId": "groupByEmployee",
        "description": "Group Employees by fields",
        "tags": [
          "employee"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmployeeGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/project/create": {
      "post": {
        "operationId": "createProject",
        "description": "Create a new Project",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/project/createMany": {
      "post": {
        "operationId": "createManyProject",
        "description": "Create several Project",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/project/findUnique": {
      "get": {
        "operationId": "findUniqueProject",
        "description": "Find one unique Project",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/project/findFirst": {
      "get": {
        "operationId": "findFirstProject",
        "description": "Find the first Project matching the given condition",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/project/findMany": {
      "get": {
        "operationId": "findManyProject",
        "description": "Find a list of Project",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/project/update": {
      "patch": {
        "operationId": "updateProject",
        "description": "Update a Project",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/project/updateMany": {
      "patch": {
        "operationId": "updateManyProject",
        "description": "Update Projects matching the given condition",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/project/upsert": {
      "post": {
        "operationId": "upsertProject",
        "description": "Upsert a Project",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/project/delete": {
      "delete": {
        "operationId": "deleteProject",
        "description": "Delete one unique Project",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/project/deleteMany": {
      "delete": {
        "operationId": "deleteManyProject",
        "description": "Delete Projects matching the given condition",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/project/count": {
      "get": {
        "operationId": "countProject",
        "description": "Find a list of Project",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ProjectCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/project/aggregate": {
      "get": {
        "operationId": "aggregateProject",
        "description": "Aggregate Projects",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateProject",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/project/groupBy": {
      "get": {
        "operationId": "groupByProject",
        "description": "Group Projects by fields",
        "tags": [
          "project"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectMember/create": {
      "post": {
        "operationId": "createProjectMember",
        "description": "Create a new ProjectMember",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectMemberCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectMember/createMany": {
      "post": {
        "operationId": "createManyProjectMember",
        "description": "Create several ProjectMember",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectMemberCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectMember/findUnique": {
      "get": {
        "operationId": "findUniqueProjectMember",
        "description": "Find one unique ProjectMember",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectMember/findFirst": {
      "get": {
        "operationId": "findFirstProjectMember",
        "description": "Find the first ProjectMember matching the given condition",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectMember/findMany": {
      "get": {
        "operationId": "findManyProjectMember",
        "description": "Find a list of ProjectMember",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectMember"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectMember/update": {
      "patch": {
        "operationId": "updateProjectMember",
        "description": "Update a ProjectMember",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectMemberUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectMember/updateMany": {
      "patch": {
        "operationId": "updateManyProjectMember",
        "description": "Update ProjectMembers matching the given condition",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectMemberUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectMember/upsert": {
      "post": {
        "operationId": "upsertProjectMember",
        "description": "Upsert a ProjectMember",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectMemberUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectMember/delete": {
      "delete": {
        "operationId": "deleteProjectMember",
        "description": "Delete one unique ProjectMember",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectMember/deleteMany": {
      "delete": {
        "operationId": "deleteManyProjectMember",
        "description": "Delete ProjectMembers matching the given condition",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectMember/count": {
      "get": {
        "operationId": "countProjectMember",
        "description": "Find a list of ProjectMember",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ProjectMemberCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectMember/aggregate": {
      "get": {
        "operationId": "aggregateProjectMember",
        "description": "Aggregate ProjectMembers",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateProjectMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectMember/groupBy": {
      "get": {
        "operationId": "groupByProjectMember",
        "description": "Group ProjectMembers by fields",
        "tags": [
          "projectMember"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectMemberGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/testimonial/create": {
      "post": {
        "operationId": "createTestimonial",
        "description": "Create a new Testimonial",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Testimonial",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestimonialCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/testimonial/createMany": {
      "post": {
        "operationId": "createManyTestimonial",
        "description": "Create several Testimonial",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestimonialCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/testimonial/findUnique": {
      "get": {
        "operationId": "findUniqueTestimonial",
        "description": "Find one unique Testimonial",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Testimonial",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestimonialFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/testimonial/findFirst": {
      "get": {
        "operationId": "findFirstTestimonial",
        "description": "Find the first Testimonial matching the given condition",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Testimonial",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestimonialFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/testimonial/findMany": {
      "get": {
        "operationId": "findManyTestimonial",
        "description": "Find a list of Testimonial",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Testimonial"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestimonialFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/testimonial/update": {
      "patch": {
        "operationId": "updateTestimonial",
        "description": "Update a Testimonial",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Testimonial",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestimonialUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/testimonial/updateMany": {
      "patch": {
        "operationId": "updateManyTestimonial",
        "description": "Update Testimonials matching the given condition",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestimonialUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/testimonial/upsert": {
      "post": {
        "operationId": "upsertTestimonial",
        "description": "Upsert a Testimonial",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Testimonial",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestimonialUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/testimonial/delete": {
      "delete": {
        "operationId": "deleteTestimonial",
        "description": "Delete one unique Testimonial",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Testimonial",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestimonialDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/testimonial/deleteMany": {
      "delete": {
        "operationId": "deleteManyTestimonial",
        "description": "Delete Testimonials matching the given condition",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestimonialDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/testimonial/count": {
      "get": {
        "operationId": "countTestimonial",
        "description": "Find a list of Testimonial",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/TestimonialCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestimonialCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/testimonial/aggregate": {
      "get": {
        "operationId": "aggregateTestimonial",
        "description": "Aggregate Testimonials",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateTestimonial",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestimonialAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/testimonial/groupBy": {
      "get": {
        "operationId": "groupByTestimonial",
        "description": "Group Testimonials by fields",
        "tags": [
          "testimonial"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TestimonialGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestimonialGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/availability/create": {
      "post": {
        "operationId": "createAvailability",
        "description": "Create a new Availability",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Availability",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/availability/createMany": {
      "post": {
        "operationId": "createManyAvailability",
        "description": "Create several Availability",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/availability/findUnique": {
      "get": {
        "operationId": "findUniqueAvailability",
        "description": "Find one unique Availability",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Availability",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/availability/findFirst": {
      "get": {
        "operationId": "findFirstAvailability",
        "description": "Find the first Availability matching the given condition",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Availability",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/availability/findMany": {
      "get": {
        "operationId": "findManyAvailability",
        "description": "Find a list of Availability",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Availability"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/availability/update": {
      "patch": {
        "operationId": "updateAvailability",
        "description": "Update a Availability",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Availability",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/availability/updateMany": {
      "patch": {
        "operationId": "updateManyAvailability",
        "description": "Update Availabilitys matching the given condition",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/availability/upsert": {
      "post": {
        "operationId": "upsertAvailability",
        "description": "Upsert a Availability",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Availability",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/availability/delete": {
      "delete": {
        "operationId": "deleteAvailability",
        "description": "Delete one unique Availability",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Availability",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/availability/deleteMany": {
      "delete": {
        "operationId": "deleteManyAvailability",
        "description": "Delete Availabilitys matching the given condition",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/availability/count": {
      "get": {
        "operationId": "countAvailability",
        "description": "Find a list of Availability",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/AvailabilityCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/availability/aggregate": {
      "get": {
        "operationId": "aggregateAvailability",
        "description": "Aggregate Availabilitys",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateAvailability",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/availability/groupBy": {
      "get": {
        "operationId": "groupByAvailability",
        "description": "Group Availabilitys by fields",
        "tags": [
          "availability"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AvailabilityGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/techStack/create": {
      "post": {
        "operationId": "createTechStack",
        "description": "Create a new TechStack",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechStackCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/techStack/createMany": {
      "post": {
        "operationId": "createManyTechStack",
        "description": "Create several TechStack",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechStackCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/techStack/findUnique": {
      "get": {
        "operationId": "findUniqueTechStack",
        "description": "Find one unique TechStack",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechStackFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/techStack/findFirst": {
      "get": {
        "operationId": "findFirstTechStack",
        "description": "Find the first TechStack matching the given condition",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechStackFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/techStack/findMany": {
      "get": {
        "operationId": "findManyTechStack",
        "description": "Find a list of TechStack",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TechStack"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechStackFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/techStack/update": {
      "patch": {
        "operationId": "updateTechStack",
        "description": "Update a TechStack",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechStackUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/techStack/updateMany": {
      "patch": {
        "operationId": "updateManyTechStack",
        "description": "Update TechStacks matching the given condition",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechStackUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/techStack/upsert": {
      "post": {
        "operationId": "upsertTechStack",
        "description": "Upsert a TechStack",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechStackUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/techStack/delete": {
      "delete": {
        "operationId": "deleteTechStack",
        "description": "Delete one unique TechStack",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechStackDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/techStack/deleteMany": {
      "delete": {
        "operationId": "deleteManyTechStack",
        "description": "Delete TechStacks matching the given condition",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechStackDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/techStack/count": {
      "get": {
        "operationId": "countTechStack",
        "description": "Find a list of TechStack",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/TechStackCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechStackCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/techStack/aggregate": {
      "get": {
        "operationId": "aggregateTechStack",
        "description": "Aggregate TechStacks",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechStackAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/techStack/groupBy": {
      "get": {
        "operationId": "groupByTechStack",
        "description": "Group TechStacks by fields",
        "tags": [
          "techStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TechStackGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechStackGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/softSkill/create": {
      "post": {
        "operationId": "createSoftSkill",
        "description": "Create a new SoftSkill",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoftSkillCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/softSkill/createMany": {
      "post": {
        "operationId": "createManySoftSkill",
        "description": "Create several SoftSkill",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoftSkillCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/softSkill/findUnique": {
      "get": {
        "operationId": "findUniqueSoftSkill",
        "description": "Find one unique SoftSkill",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftSkillFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/softSkill/findFirst": {
      "get": {
        "operationId": "findFirstSoftSkill",
        "description": "Find the first SoftSkill matching the given condition",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftSkillFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/softSkill/findMany": {
      "get": {
        "operationId": "findManySoftSkill",
        "description": "Find a list of SoftSkill",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SoftSkill"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftSkillFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/softSkill/update": {
      "patch": {
        "operationId": "updateSoftSkill",
        "description": "Update a SoftSkill",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoftSkillUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/softSkill/updateMany": {
      "patch": {
        "operationId": "updateManySoftSkill",
        "description": "Update SoftSkills matching the given condition",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoftSkillUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/softSkill/upsert": {
      "post": {
        "operationId": "upsertSoftSkill",
        "description": "Upsert a SoftSkill",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoftSkillUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/softSkill/delete": {
      "delete": {
        "operationId": "deleteSoftSkill",
        "description": "Delete one unique SoftSkill",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftSkillDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/softSkill/deleteMany": {
      "delete": {
        "operationId": "deleteManySoftSkill",
        "description": "Delete SoftSkills matching the given condition",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftSkillDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/softSkill/count": {
      "get": {
        "operationId": "countSoftSkill",
        "description": "Find a list of SoftSkill",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/SoftSkillCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftSkillCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/softSkill/aggregate": {
      "get": {
        "operationId": "aggregateSoftSkill",
        "description": "Aggregate SoftSkills",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateSoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftSkillAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/softSkill/groupBy": {
      "get": {
        "operationId": "groupBySoftSkill",
        "description": "Group SoftSkills by fields",
        "tags": [
          "softSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SoftSkillGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftSkillGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeTechStack/create": {
      "post": {
        "operationId": "createEmployeeTechStack",
        "description": "Create a new EmployeeTechStack",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeTechStackCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeTechStack/createMany": {
      "post": {
        "operationId": "createManyEmployeeTechStack",
        "description": "Create several EmployeeTechStack",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeTechStackCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeTechStack/findUnique": {
      "get": {
        "operationId": "findUniqueEmployeeTechStack",
        "description": "Find one unique EmployeeTechStack",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTechStackFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeTechStack/findFirst": {
      "get": {
        "operationId": "findFirstEmployeeTechStack",
        "description": "Find the first EmployeeTechStack matching the given condition",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTechStackFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeTechStack/findMany": {
      "get": {
        "operationId": "findManyEmployeeTechStack",
        "description": "Find a list of EmployeeTechStack",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmployeeTechStack"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTechStackFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeTechStack/update": {
      "patch": {
        "operationId": "updateEmployeeTechStack",
        "description": "Update a EmployeeTechStack",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeTechStackUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeTechStack/updateMany": {
      "patch": {
        "operationId": "updateManyEmployeeTechStack",
        "description": "Update EmployeeTechStacks matching the given condition",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeTechStackUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeTechStack/upsert": {
      "post": {
        "operationId": "upsertEmployeeTechStack",
        "description": "Upsert a EmployeeTechStack",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeTechStackUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeTechStack/delete": {
      "delete": {
        "operationId": "deleteEmployeeTechStack",
        "description": "Delete one unique EmployeeTechStack",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTechStackDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeTechStack/deleteMany": {
      "delete": {
        "operationId": "deleteManyEmployeeTechStack",
        "description": "Delete EmployeeTechStacks matching the given condition",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTechStackDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeTechStack/count": {
      "get": {
        "operationId": "countEmployeeTechStack",
        "description": "Find a list of EmployeeTechStack",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/EmployeeTechStackCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTechStackCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeTechStack/aggregate": {
      "get": {
        "operationId": "aggregateEmployeeTechStack",
        "description": "Aggregate EmployeeTechStacks",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateEmployeeTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTechStackAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeTechStack/groupBy": {
      "get": {
        "operationId": "groupByEmployeeTechStack",
        "description": "Group EmployeeTechStacks by fields",
        "tags": [
          "employeeTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmployeeTechStackGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTechStackGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeSoftSkill/create": {
      "post": {
        "operationId": "createEmployeeSoftSkill",
        "description": "Create a new EmployeeSoftSkill",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeSoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSoftSkillCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeSoftSkill/createMany": {
      "post": {
        "operationId": "createManyEmployeeSoftSkill",
        "description": "Create several EmployeeSoftSkill",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSoftSkillCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeSoftSkill/findUnique": {
      "get": {
        "operationId": "findUniqueEmployeeSoftSkill",
        "description": "Find one unique EmployeeSoftSkill",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeSoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSoftSkillFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeSoftSkill/findFirst": {
      "get": {
        "operationId": "findFirstEmployeeSoftSkill",
        "description": "Find the first EmployeeSoftSkill matching the given condition",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeSoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSoftSkillFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeSoftSkill/findMany": {
      "get": {
        "operationId": "findManyEmployeeSoftSkill",
        "description": "Find a list of EmployeeSoftSkill",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmployeeSoftSkill"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSoftSkillFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeSoftSkill/update": {
      "patch": {
        "operationId": "updateEmployeeSoftSkill",
        "description": "Update a EmployeeSoftSkill",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeSoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSoftSkillUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeSoftSkill/updateMany": {
      "patch": {
        "operationId": "updateManyEmployeeSoftSkill",
        "description": "Update EmployeeSoftSkills matching the given condition",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSoftSkillUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeSoftSkill/upsert": {
      "post": {
        "operationId": "upsertEmployeeSoftSkill",
        "description": "Upsert a EmployeeSoftSkill",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeSoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSoftSkillUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/employeeSoftSkill/delete": {
      "delete": {
        "operationId": "deleteEmployeeSoftSkill",
        "description": "Delete one unique EmployeeSoftSkill",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EmployeeSoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSoftSkillDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeSoftSkill/deleteMany": {
      "delete": {
        "operationId": "deleteManyEmployeeSoftSkill",
        "description": "Delete EmployeeSoftSkills matching the given condition",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSoftSkillDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeSoftSkill/count": {
      "get": {
        "operationId": "countEmployeeSoftSkill",
        "description": "Find a list of EmployeeSoftSkill",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/EmployeeSoftSkillCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSoftSkillCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeSoftSkill/aggregate": {
      "get": {
        "operationId": "aggregateEmployeeSoftSkill",
        "description": "Aggregate EmployeeSoftSkills",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateEmployeeSoftSkill",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSoftSkillAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/employeeSoftSkill/groupBy": {
      "get": {
        "operationId": "groupByEmployeeSoftSkill",
        "description": "Group EmployeeSoftSkills by fields",
        "tags": [
          "employeeSoftSkill"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmployeeSoftSkillGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSoftSkillGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/industry/create": {
      "post": {
        "operationId": "createIndustry",
        "description": "Create a new Industry",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Industry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/industry/createMany": {
      "post": {
        "operationId": "createManyIndustry",
        "description": "Create several Industry",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/industry/findUnique": {
      "get": {
        "operationId": "findUniqueIndustry",
        "description": "Find one unique Industry",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Industry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/industry/findFirst": {
      "get": {
        "operationId": "findFirstIndustry",
        "description": "Find the first Industry matching the given condition",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Industry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/industry/findMany": {
      "get": {
        "operationId": "findManyIndustry",
        "description": "Find a list of Industry",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Industry"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/industry/update": {
      "patch": {
        "operationId": "updateIndustry",
        "description": "Update a Industry",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Industry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/industry/updateMany": {
      "patch": {
        "operationId": "updateManyIndustry",
        "description": "Update Industrys matching the given condition",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/industry/upsert": {
      "post": {
        "operationId": "upsertIndustry",
        "description": "Upsert a Industry",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Industry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/industry/delete": {
      "delete": {
        "operationId": "deleteIndustry",
        "description": "Delete one unique Industry",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Industry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/industry/deleteMany": {
      "delete": {
        "operationId": "deleteManyIndustry",
        "description": "Delete Industrys matching the given condition",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/industry/count": {
      "get": {
        "operationId": "countIndustry",
        "description": "Find a list of Industry",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/IndustryCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/industry/aggregate": {
      "get": {
        "operationId": "aggregateIndustry",
        "description": "Aggregate Industrys",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateIndustry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/industry/groupBy": {
      "get": {
        "operationId": "groupByIndustry",
        "description": "Group Industrys by fields",
        "tags": [
          "industry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IndustryGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndustryGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectIndustry/create": {
      "post": {
        "operationId": "createProjectIndustry",
        "description": "Create a new ProjectIndustry",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectIndustry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectIndustryCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectIndustry/createMany": {
      "post": {
        "operationId": "createManyProjectIndustry",
        "description": "Create several ProjectIndustry",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectIndustryCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectIndustry/findUnique": {
      "get": {
        "operationId": "findUniqueProjectIndustry",
        "description": "Find one unique ProjectIndustry",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectIndustry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIndustryFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectIndustry/findFirst": {
      "get": {
        "operationId": "findFirstProjectIndustry",
        "description": "Find the first ProjectIndustry matching the given condition",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectIndustry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIndustryFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectIndustry/findMany": {
      "get": {
        "operationId": "findManyProjectIndustry",
        "description": "Find a list of ProjectIndustry",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectIndustry"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIndustryFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectIndustry/update": {
      "patch": {
        "operationId": "updateProjectIndustry",
        "description": "Update a ProjectIndustry",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectIndustry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectIndustryUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectIndustry/updateMany": {
      "patch": {
        "operationId": "updateManyProjectIndustry",
        "description": "Update ProjectIndustrys matching the given condition",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectIndustryUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectIndustry/upsert": {
      "post": {
        "operationId": "upsertProjectIndustry",
        "description": "Upsert a ProjectIndustry",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectIndustry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectIndustryUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectIndustry/delete": {
      "delete": {
        "operationId": "deleteProjectIndustry",
        "description": "Delete one unique ProjectIndustry",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectIndustry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIndustryDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectIndustry/deleteMany": {
      "delete": {
        "operationId": "deleteManyProjectIndustry",
        "description": "Delete ProjectIndustrys matching the given condition",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIndustryDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectIndustry/count": {
      "get": {
        "operationId": "countProjectIndustry",
        "description": "Find a list of ProjectIndustry",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ProjectIndustryCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIndustryCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectIndustry/aggregate": {
      "get": {
        "operationId": "aggregateProjectIndustry",
        "description": "Aggregate ProjectIndustrys",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateProjectIndustry",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIndustryAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectIndustry/groupBy": {
      "get": {
        "operationId": "groupByProjectIndustry",
        "description": "Group ProjectIndustrys by fields",
        "tags": [
          "projectIndustry"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectIndustryGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIndustryGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectTechStack/create": {
      "post": {
        "operationId": "createProjectTechStack",
        "description": "Create a new ProjectTechStack",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTechStackCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectTechStack/createMany": {
      "post": {
        "operationId": "createManyProjectTechStack",
        "description": "Create several ProjectTechStack",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTechStackCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectTechStack/findUnique": {
      "get": {
        "operationId": "findUniqueProjectTechStack",
        "description": "Find one unique ProjectTechStack",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTechStackFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectTechStack/findFirst": {
      "get": {
        "operationId": "findFirstProjectTechStack",
        "description": "Find the first ProjectTechStack matching the given condition",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTechStackFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectTechStack/findMany": {
      "get": {
        "operationId": "findManyProjectTechStack",
        "description": "Find a list of ProjectTechStack",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectTechStack"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTechStackFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectTechStack/update": {
      "patch": {
        "operationId": "updateProjectTechStack",
        "description": "Update a ProjectTechStack",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTechStackUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectTechStack/updateMany": {
      "patch": {
        "operationId": "updateManyProjectTechStack",
        "description": "Update ProjectTechStacks matching the given condition",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTechStackUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectTechStack/upsert": {
      "post": {
        "operationId": "upsertProjectTechStack",
        "description": "Upsert a ProjectTechStack",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTechStackUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/projectTechStack/delete": {
      "delete": {
        "operationId": "deleteProjectTechStack",
        "description": "Delete one unique ProjectTechStack",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTechStackDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectTechStack/deleteMany": {
      "delete": {
        "operationId": "deleteManyProjectTechStack",
        "description": "Delete ProjectTechStacks matching the given condition",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTechStackDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectTechStack/count": {
      "get": {
        "operationId": "countProjectTechStack",
        "description": "Find a list of ProjectTechStack",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ProjectTechStackCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTechStackCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectTechStack/aggregate": {
      "get": {
        "operationId": "aggregateProjectTechStack",
        "description": "Aggregate ProjectTechStacks",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateProjectTechStack",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTechStackAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/projectTechStack/groupBy": {
      "get": {
        "operationId": "groupByProjectTechStack",
        "description": "Group ProjectTechStacks by fields",
        "tags": [
          "projectTechStack"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectTechStackGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTechStackGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/education/create": {
      "post": {
        "operationId": "createEducation",
        "description": "Create a new Education",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Education",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/education/createMany": {
      "post": {
        "operationId": "createManyEducation",
        "description": "Create several Education",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/education/findUnique": {
      "get": {
        "operationId": "findUniqueEducation",
        "description": "Find one unique Education",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Education",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/education/findFirst": {
      "get": {
        "operationId": "findFirstEducation",
        "description": "Find the first Education matching the given condition",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Education",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/education/findMany": {
      "get": {
        "operationId": "findManyEducation",
        "description": "Find a list of Education",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Education"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/education/update": {
      "patch": {
        "operationId": "updateEducation",
        "description": "Update a Education",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Education",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/education/updateMany": {
      "patch": {
        "operationId": "updateManyEducation",
        "description": "Update Educations matching the given condition",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/education/upsert": {
      "post": {
        "operationId": "upsertEducation",
        "description": "Upsert a Education",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Education",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/education/delete": {
      "delete": {
        "operationId": "deleteEducation",
        "description": "Delete one unique Education",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Education",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/education/deleteMany": {
      "delete": {
        "operationId": "deleteManyEducation",
        "description": "Delete Educations matching the given condition",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/education/count": {
      "get": {
        "operationId": "countEducation",
        "description": "Find a list of Education",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/EducationCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/education/aggregate": {
      "get": {
        "operationId": "aggregateEducation",
        "description": "Aggregate Educations",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateEducation",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/education/groupBy": {
      "get": {
        "operationId": "groupByEducation",
        "description": "Group Educations by fields",
        "tags": [
          "education"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EducationGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/certificate/create": {
      "post": {
        "operationId": "createCertificate",
        "description": "Create a new Certificate",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Certificate",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/certificate/createMany": {
      "post": {
        "operationId": "createManyCertificate",
        "description": "Create several Certificate",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/certificate/findUnique": {
      "get": {
        "operationId": "findUniqueCertificate",
        "description": "Find one unique Certificate",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Certificate",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/certificate/findFirst": {
      "get": {
        "operationId": "findFirstCertificate",
        "description": "Find the first Certificate matching the given condition",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Certificate",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/certificate/findMany": {
      "get": {
        "operationId": "findManyCertificate",
        "description": "Find a list of Certificate",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Certificate"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/certificate/update": {
      "patch": {
        "operationId": "updateCertificate",
        "description": "Update a Certificate",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Certificate",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/certificate/updateMany": {
      "patch": {
        "operationId": "updateManyCertificate",
        "description": "Update Certificates matching the given condition",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/certificate/upsert": {
      "post": {
        "operationId": "upsertCertificate",
        "description": "Upsert a Certificate",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Certificate",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/certificate/delete": {
      "delete": {
        "operationId": "deleteCertificate",
        "description": "Delete one unique Certificate",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Certificate",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/certificate/deleteMany": {
      "delete": {
        "operationId": "deleteManyCertificate",
        "description": "Delete Certificates matching the given condition",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/certificate/count": {
      "get": {
        "operationId": "countCertificate",
        "description": "Find a list of Certificate",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/CertificateCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/certificate/aggregate": {
      "get": {
        "operationId": "aggregateCertificate",
        "description": "Aggregate Certificates",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateCertificate",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/certificate/groupBy": {
      "get": {
        "operationId": "groupByCertificate",
        "description": "Group Certificates by fields",
        "tags": [
          "certificate"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CertificateGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/career/create": {
      "post": {
        "operationId": "createCareer",
        "description": "Create a new Career",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Career",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CareerCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/career/createMany": {
      "post": {
        "operationId": "createManyCareer",
        "description": "Create several Career",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CareerCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/career/findUnique": {
      "get": {
        "operationId": "findUniqueCareer",
        "description": "Find one unique Career",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Career",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareerFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/career/findFirst": {
      "get": {
        "operationId": "findFirstCareer",
        "description": "Find the first Career matching the given condition",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Career",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareerFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/career/findMany": {
      "get": {
        "operationId": "findManyCareer",
        "description": "Find a list of Career",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Career"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareerFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/career/update": {
      "patch": {
        "operationId": "updateCareer",
        "description": "Update a Career",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Career",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CareerUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/career/updateMany": {
      "patch": {
        "operationId": "updateManyCareer",
        "description": "Update Careers matching the given condition",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CareerUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/career/upsert": {
      "post": {
        "operationId": "upsertCareer",
        "description": "Upsert a Career",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Career",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CareerUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/v2/career/delete": {
      "delete": {
        "operationId": "deleteCareer",
        "description": "Delete one unique Career",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Career",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareerDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/career/deleteMany": {
      "delete": {
        "operationId": "deleteManyCareer",
        "description": "Delete Careers matching the given condition",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareerDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/career/count": {
      "get": {
        "operationId": "countCareer",
        "description": "Find a list of Career",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/CareerCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareerCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/career/aggregate": {
      "get": {
        "operationId": "aggregateCareer",
        "description": "Aggregate Careers",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateCareer",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareerAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/v2/career/groupBy": {
      "get": {
        "operationId": "groupByCareer",
        "description": "Group Careers by fields",
        "tags": [
          "career"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CareerGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareerGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}