name: Node.js CI

on:
  schedule:
    - cron: "0 2 * * *"  # Runs every day at 2:00 AM UTC
  push:
    branches: [ "development" ]
  pull_request:

jobs:
  backup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x] # choose one stable Node.js version

    defaults:
        run:
            working-directory: backend # set default working directory
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json # point cache to backend

      - name: Install PostgreSQL 17 client tools
        run: |
            sudo apt-get update
            sudo apt-get install -y wget gnupg
            sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
            wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            sudo apt-get update
            sudo apt-get install -y postgresql-client-17
            which pg_dump
            pg_dump --version
            sudo update-alternatives --install /usr/bin/pg_dump pg_dump /usr/lib/postgresql/17/bin/pg_dump 1 --force
            sudo update-alternatives --set pg_dump /usr/lib/postgresql/17/bin/pg_dump
            pg_dump --version
    
      - name: Install dependencies
        run: npm install
        working-directory: backend

        
      - name: Run backup script
        run: npm run backup
        working-directory: backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_URL2: ${{ secrets.DATABASE_URL2 }}
          B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
          B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          B2_BUCKET_ID: ${{ secrets.B2_BUCKET_ID }}
          
